{
    "io_ascii.time_ascii.AastexFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.AastexFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.AastexFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.AastexFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.AastexInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.AastexInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.AastexInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.AastexInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.AastexString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.AastexString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.AastexString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.AastexString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.BasicFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.BasicFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.BasicFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.BasicFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.BasicInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.BasicInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.BasicInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.BasicInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.BasicString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.BasicString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.BasicString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.BasicString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CommentedHeaderFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CommentedHeaderFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CommentedHeaderFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CommentedHeaderFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CommentedHeaderInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CommentedHeaderInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CommentedHeaderInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CommentedHeaderInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CommentedHeaderString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CommentedHeaderString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CommentedHeaderString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CommentedHeaderString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CsvFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CsvFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CsvFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CsvFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CsvInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CsvInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CsvInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CsvInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CsvString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CsvString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.CsvString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.CsvString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthNoHeaderFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthNoHeaderFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthNoHeaderFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthNoHeaderFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthNoHeaderInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthNoHeaderInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthNoHeaderInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthNoHeaderInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthNoHeaderString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthNoHeaderString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthNoHeaderString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthNoHeaderString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthTwoLineFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthTwoLineFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthTwoLineFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthTwoLineFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthTwoLineInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthTwoLineInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthTwoLineInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthTwoLineInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthTwoLineString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthTwoLineString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.FixedWidthTwoLineString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.FixedWidthTwoLineString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.IpacFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.IpacFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.IpacFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.IpacFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.IpacInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.IpacInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.IpacInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.IpacInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.IpacString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.IpacString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.IpacString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.IpacString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.LatexFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.LatexFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.LatexFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.LatexFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.LatexInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.LatexInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.LatexInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.LatexInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.LatexString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.LatexString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.LatexString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.LatexString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.NoHeaderFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.NoHeaderFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.NoHeaderFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.NoHeaderFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.NoHeaderInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.NoHeaderInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.NoHeaderInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.NoHeaderInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.NoHeaderString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.NoHeaderString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.NoHeaderString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.NoHeaderString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.RdbFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.RdbFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.RdbFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.RdbFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.RdbInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.RdbInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.RdbInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.RdbInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.RdbString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.RdbString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.RdbString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.RdbString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.SextractorFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.SextractorFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.SextractorInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.SextractorInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.SextractorString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.SextractorString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.TabFloat.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.TabFloat.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.TabFloat.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.TabFloat.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.TabInt.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.TabInt.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.TabInt.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.TabInt.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.TabString.time_read": {
        "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.TabString.time_read", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ascii.TabString.time_write": {
        "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ascii.TabString.time_write", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_core.CoreSuite.time_base_splitter": {
        "code": "def time_base_splitter(self):\n    core.BaseSplitter().process_val(self.line)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_core.CoreSuite.time_base_splitter", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_core.CoreSuite.time_continuation_inputter": {
        "code": "def time_continuation_inputter(self):\n    core.ContinuationLinesInputter().process_lines(self.lines)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_core.CoreSuite.time_continuation_inputter", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_core.CoreSuite.time_convert_vals": {
        "code": "def time_convert_vals(self):\n    core.TableOutputter()._convert_vals(self.cols)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_core.CoreSuite.time_convert_vals", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_core.CoreSuite.time_default_splitter_call": {
        "code": "def time_default_splitter_call(self):\n    core.DefaultSplitter()(self.csv_line)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_core.CoreSuite.time_default_splitter_call", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_core.CoreSuite.time_default_splitter_join": {
        "code": "def time_default_splitter_join(self):\n    core.DefaultSplitter().join(self.vals)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_core.CoreSuite.time_default_splitter_join", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_core.CoreSuite.time_whitespace_splitter": {
        "code": "def time_whitespace_splitter(self):\n    core.WhitespaceSplitter().process_line(self.line)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_core.CoreSuite.time_whitespace_splitter", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_fixedwidth.FixedWidthSuite.time_header": {
        "code": "def time_header(self):\n    self.header.get_cols(self.lines)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_fixedwidth.FixedWidthSuite.time_header", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_fixedwidth.FixedWidthSuite.time_splitter": {
        "code": "def time_splitter(self):\n    self.splitter(self.lines[1:])\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_fixedwidth.FixedWidthSuite.time_splitter", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ipac.IPACSuite.time_data_str_vals": {
        "code": "def time_data_str_vals(self):\n    data = IpacData()\n    data.cols = list(self.table.columns.values())\n    data.str_vals()\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ipac.IPACSuite.time_data_str_vals", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ipac.IPACSuite.time_get_cols": {
        "code": "def time_get_cols(self):\n    self.header.get_cols(self.lines)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ipac.IPACSuite.time_get_cols", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ipac.IPACSuite.time_header_str_vals": {
        "code": "def time_header_str_vals(self):\n    header = IpacHeader()\n    header.cols = list(self.table.columns.values())\n    header.DBMS = False\n    header.str_vals()\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ipac.IPACSuite.time_header_str_vals", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_ipac.IPACSuite.time_splitter": {
        "code": "def time_splitter(self):\n    self.splitter.join(self.vals, self.widths)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_ipac.IPACSuite.time_splitter", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_rdb.RDBSuite.time_get_cols": {
        "code": "def time_get_cols(self):\n    self.header.get_cols(self.lines)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_rdb.RDBSuite.time_get_cols", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_sextractor.SExtractorSuite.time_header": {
        "code": "def time_header(self):\n    self.header.get_cols(self.lines)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_sextractor.SExtractorSuite.time_header", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_table.TableSuite.mem_table_init": {
        "code": "def mem_table_init(self):\n    return table.Table(self.lst)\n", 
        "name": "io_ascii.time_table.TableSuite.mem_table_init", 
        "timeout": 60.0, 
        "type": "memory", 
        "unit": "bytes"
    }, 
    "io_ascii.time_table.TableSuite.mem_table_outputter": {
        "code": "def mem_table_outputter(self):\n    return self.outputter(self.cols, {'table': {}})\n", 
        "name": "io_ascii.time_table.TableSuite.mem_table_outputter", 
        "timeout": 60.0, 
        "type": "memory", 
        "unit": "bytes"
    }, 
    "io_ascii.time_table.TableSuite.time_str_vals_float": {
        "code": "def time_str_vals_float(self):\n    self.table_cols[1].iter_str_vals()\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_table.TableSuite.time_str_vals_float", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_table.TableSuite.time_str_vals_int": {
        "code": "def time_str_vals_int(self):\n    self.table_cols[0].iter_str_vals()\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_table.TableSuite.time_str_vals_int", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_table.TableSuite.time_str_vals_str": {
        "code": "def time_str_vals_str(self):\n    self.table_cols[2].iter_str_vals()\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_table.TableSuite.time_str_vals_str", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_table.TableSuite.time_table_init_from_list": {
        "code": "def time_table_init_from_list(self):\n    self.table._init_from_list(self.table_cols, ['1', '2', '3'],\n                               [None, None, None], 3, True)\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_table.TableSuite.time_table_init_from_list", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "io_ascii.time_table.TableSuite.time_table_outputter": {
        "code": "def time_table_outputter(self):\n    self.outputter(self.cols, {'table': {}})\n", 
        "goal_time": 2.0, 
        "name": "io_ascii.time_table.TableSuite.time_table_outputter", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_coordinates.FrameBenchmarks.time_init_array": {
        "code": "def time_init_array(self):\n    coords.FK5(self.array_ra, self.array_dec)\n", 
        "goal_time": 2.0, 
        "name": "time_coordinates.FrameBenchmarks.time_init_array", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_coordinates.FrameBenchmarks.time_init_nodata": {
        "code": "def time_init_nodata(self):\n    coords.FK5()\n", 
        "goal_time": 2.0, 
        "name": "time_coordinates.FrameBenchmarks.time_init_nodata", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_coordinates.FrameBenchmarks.time_init_scalar": {
        "code": "def time_init_scalar(self):\n    coords.FK5(self.scalar_ra, self.scalar_dec)\n", 
        "goal_time": 2.0, 
        "name": "time_coordinates.FrameBenchmarks.time_init_scalar", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_coordinates.SkyCoordBenchmarks.time_icrs_to_galactic": {
        "code": "def time_icrs_to_galactic(self):\n    self.coord.transform_to('galactic')\n", 
        "goal_time": 2.0, 
        "name": "time_coordinates.SkyCoordBenchmarks.time_icrs_to_galactic", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_coordinates.SkyCoordBenchmarks.time_repr": {
        "code": "def time_repr(self):\n    repr(self.coord)\n", 
        "goal_time": 2.0, 
        "name": "time_coordinates.SkyCoordBenchmarks.time_repr", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_coordinates.time_latitude": {
        "code": "def time_latitude():\n    coords.Latitude(3.2, u.degree)\n", 
        "goal_time": 2.0, 
        "name": "time_coordinates.time_latitude", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_quantity.time_quantity_array_conversion": {
        "code": "def time_quantity_array_conversion():\n    (np.arange(100000) * u.m / u.s).to(u.km / u.hour)\n", 
        "goal_time": 2.0, 
        "name": "time_quantity.time_quantity_array_conversion", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_quantity.time_quantity_init_array": {
        "code": "def time_quantity_init_array():\n    np.arange(100000) * u.m / u.s\n", 
        "goal_time": 2.0, 
        "name": "time_quantity.time_quantity_init_array", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_quantity.time_quantity_init_scalar": {
        "code": "def time_quantity_init_scalar():\n    3. * u.m / u.s\n", 
        "goal_time": 2.0, 
        "name": "time_quantity.time_quantity_init_scalar", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_quantity.time_quantity_scalar_conversion": {
        "code": "def time_quantity_scalar_conversion():\n    (3. * u.m / u.s).to(u.km / u.hour)\n", 
        "goal_time": 2.0, 
        "name": "time_quantity.time_quantity_scalar_conversion", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_quantity.time_quantity_ufunc_sin": {
        "code": "def time_quantity_ufunc_sin():\n    np.sin(np.arange(10000) * u.degree)\n", 
        "goal_time": 2.0, 
        "name": "time_quantity.time_quantity_ufunc_sin", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_add_column": {
        "code": "def time_add_column(self):\n    self.table['e'] = self.extra_column\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_add_column", 
        "number": 1, 
        "repeat": 1, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_add_row": {
        "code": "def time_add_row(self):\n    self.table.add_row(self.extra_row)\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_add_row", 
        "number": 1, 
        "repeat": 1, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_aggregate": {
        "code": "def time_aggregate(self):\n    # Test aggregate with a function that supports reduceat\n    self.table_grouped.groups.aggregate(np.sum)\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_aggregate", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_aggregate_noreduceat": {
        "code": "def time_aggregate_noreduceat(self):\n    # Test aggregate with a function that doesn't support reduceat\n    self.table_grouped.groups.aggregate(lambda x: np.sum(x))\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_aggregate_noreduceat", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_column_get": {
        "code": "def time_column_get(self):\n    self.table['c']\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_column_get", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_column_make_bool_mask": {
        "code": "def time_column_make_bool_mask(self):\n    self.table['a'] > 0.6\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_column_make_bool_mask", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_column_set": {
        "code": "def time_column_set(self):\n    self.table['a'] = 0.\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_column_set", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_column_set_all": {
        "code": "def time_column_set_all(self):\n    self.table['b'][:] = True\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_column_set_all", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_column_set_row_subset": {
        "code": "def time_column_set_row_subset(self):\n    self.table['b'][self.bool_mask] = True\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_column_set_row_subset", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_column_set_row_subset_int": {
        "code": "def time_column_set_row_subset_int(self):\n    self.table['b'][self.row_indices] = True\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_column_set_row_subset_int", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_column_slice_bool": {
        "code": "def time_column_slice_bool(self):\n    col_subset = self.table['a'][self.bool_mask]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_column_slice_bool", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_column_slice_int": {
        "code": "def time_column_slice_int(self):\n    col_subset = self.table['a'][self.row_indices]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_column_slice_int", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_copy_column": {
        "code": "def time_copy_column(self):\n    self.table['a'].copy()\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_copy_column", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_copy_table": {
        "code": "def time_copy_table(self):\n    self.table.copy()\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_copy_table", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_group": {
        "code": "def time_group(self):\n    self.table.group_by('d')\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_group", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_hstack": {
        "code": "def time_hstack(self):\n    hstack([self.table, self.other_table_2])\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_hstack", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_item_get_colfirst": {
        "code": "def time_item_get_colfirst(self):\n    self.table['b'][300]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_item_get_colfirst", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_item_get_rowfirst": {
        "code": "def time_item_get_rowfirst(self):\n    self.table[300]['b']\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_item_get_rowfirst", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_iter_row": {
        "code": "def time_iter_row(self):\n    for row in self.table:\n        pass\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_iter_row", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_join_inner": {
        "code": "def time_join_inner(self):\n    join(self.table, self.other_table, keys=\"i\", join_type='inner')\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_join_inner", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_join_outer": {
        "code": "def time_join_outer(self):\n    join(self.table, self.other_table, keys=\"i\", join_type='outer')\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_join_outer", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_mask_column": {
        "code": "def time_mask_column(self):\n    self.table['a'].mask = self.bool_mask\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_mask_column", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_multi_column_get": {
        "code": "def time_multi_column_get(self):\n    self.table[('a','c')]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_multi_column_get", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_remove_column": {
        "code": "def time_remove_column(self):\n    self.table.remove_column('a')\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_remove_column", 
        "number": 1, 
        "repeat": 1, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_remove_row": {
        "code": "def time_remove_row(self):\n    self.table.remove_row(6)\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_remove_row", 
        "number": 1, 
        "repeat": 1, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_remove_rows": {
        "code": "def time_remove_rows(self):\n    self.table.remove_rows(self.row_indices)\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_remove_rows", 
        "number": 1, 
        "repeat": 1, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_row_get": {
        "code": "def time_row_get(self):\n    self.table[300]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_row_get", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_sort": {
        "code": "def time_sort(self):\n    self.table.sort('a')\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_sort", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_table_slice_bool": {
        "code": "def time_table_slice_bool(self):\n    table_subset = self.table[self.bool_mask]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_table_slice_bool", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_table_slice_int": {
        "code": "def time_table_slice_int(self):\n    table_subset = self.table[self.row_indices]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_table_slice_int", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeMaskedTable.time_vstack": {
        "code": "def time_vstack(self):\n    vstack([self.table, self.table])\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeMaskedTable.time_vstack", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_add_column": {
        "code": "def time_add_column(self):\n    self.table['e'] = self.extra_column\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_add_column", 
        "number": 1, 
        "repeat": 1, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_add_row": {
        "code": "def time_add_row(self):\n    self.table.add_row(self.extra_row)\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_add_row", 
        "number": 1, 
        "repeat": 1, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_aggregate": {
        "code": "def time_aggregate(self):\n    # Test aggregate with a function that supports reduceat\n    self.table_grouped.groups.aggregate(np.sum)\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_aggregate", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_aggregate_noreduceat": {
        "code": "def time_aggregate_noreduceat(self):\n    # Test aggregate with a function that doesn't support reduceat\n    self.table_grouped.groups.aggregate(lambda x: np.sum(x))\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_aggregate_noreduceat", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_column_get": {
        "code": "def time_column_get(self):\n    self.table['c']\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_column_get", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_column_make_bool_mask": {
        "code": "def time_column_make_bool_mask(self):\n    self.table['a'] > 0.6\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_column_make_bool_mask", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_column_set": {
        "code": "def time_column_set(self):\n    self.table['a'] = 0.\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_column_set", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_column_set_all": {
        "code": "def time_column_set_all(self):\n    self.table['b'][:] = True\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_column_set_all", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_column_set_row_subset": {
        "code": "def time_column_set_row_subset(self):\n    self.table['b'][self.bool_mask] = True\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_column_set_row_subset", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_column_set_row_subset_int": {
        "code": "def time_column_set_row_subset_int(self):\n    self.table['b'][self.row_indices] = True\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_column_set_row_subset_int", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_column_slice_bool": {
        "code": "def time_column_slice_bool(self):\n    col_subset = self.table['a'][self.bool_mask]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_column_slice_bool", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_column_slice_int": {
        "code": "def time_column_slice_int(self):\n    col_subset = self.table['a'][self.row_indices]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_column_slice_int", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_copy_column": {
        "code": "def time_copy_column(self):\n    self.table['a'].copy()\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_copy_column", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_copy_table": {
        "code": "def time_copy_table(self):\n    self.table.copy()\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_copy_table", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_group": {
        "code": "def time_group(self):\n    self.table.group_by('d')\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_group", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_hstack": {
        "code": "def time_hstack(self):\n    hstack([self.table, self.other_table_2])\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_hstack", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_item_get_colfirst": {
        "code": "def time_item_get_colfirst(self):\n    self.table['b'][300]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_item_get_colfirst", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_item_get_rowfirst": {
        "code": "def time_item_get_rowfirst(self):\n    self.table[300]['b']\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_item_get_rowfirst", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_iter_row": {
        "code": "def time_iter_row(self):\n    for row in self.table:\n        pass\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_iter_row", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_join_inner": {
        "code": "def time_join_inner(self):\n    join(self.table, self.other_table, keys=\"i\", join_type='inner')\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_join_inner", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_join_outer": {
        "code": "def time_join_outer(self):\n    join(self.table, self.other_table, keys=\"i\", join_type='outer')\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_join_outer", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_multi_column_get": {
        "code": "def time_multi_column_get(self):\n    self.table[('a','c')]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_multi_column_get", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_remove_column": {
        "code": "def time_remove_column(self):\n    self.table.remove_column('a')\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_remove_column", 
        "number": 1, 
        "repeat": 1, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_remove_row": {
        "code": "def time_remove_row(self):\n    self.table.remove_row(6)\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_remove_row", 
        "number": 1, 
        "repeat": 1, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_remove_rows": {
        "code": "def time_remove_rows(self):\n    self.table.remove_rows(self.row_indices)\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_remove_rows", 
        "number": 1, 
        "repeat": 1, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_row_get": {
        "code": "def time_row_get(self):\n    self.table[300]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_row_get", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_sort": {
        "code": "def time_sort(self):\n    self.table.sort('a')\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_sort", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_table_slice_bool": {
        "code": "def time_table_slice_bool(self):\n    table_subset = self.table[self.bool_mask]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_table_slice_bool", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_table_slice_int": {
        "code": "def time_table_slice_int(self):\n    table_subset = self.table[self.row_indices]\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_table_slice_int", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_table.TimeTable.time_vstack": {
        "code": "def time_vstack(self):\n    vstack([self.table, self.table])\n", 
        "goal_time": 2.0, 
        "name": "time_table.TimeTable.time_vstack", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_units.mem_unit": {
        "code": "def mem_unit():\n    return u.erg\n", 
        "name": "time_units.mem_unit", 
        "timeout": 60.0, 
        "type": "memory", 
        "unit": "bytes"
    }, 
    "time_units.time_compose_to_bases": {
        "code": "def time_compose_to_bases():\n    x = copy.copy(u.Ry)\n    x.cgs\n", 
        "goal_time": 2.0, 
        "name": "time_units.time_compose_to_bases", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_units.time_simple_unit_parse": {
        "code": "def time_simple_unit_parse():\n    u.Unit('1 d')\n", 
        "goal_time": 2.0, 
        "name": "time_units.time_simple_unit_parse", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_units.time_unit_compose": {
        "code": "def time_unit_compose():\n    u.Ry.compose()\n", 
        "goal_time": 2.0, 
        "name": "time_units.time_unit_compose", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_units.time_unit_parse": {
        "code": "def time_unit_parse():\n    u.Unit('1e-07 kg m2 / s2')\n", 
        "goal_time": 2.0, 
        "name": "time_units.time_unit_parse", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_units.time_unit_to": {
        "code": "def time_unit_to():\n    u.m.to(u.pc)\n", 
        "goal_time": 2.0, 
        "name": "time_units.time_unit_to", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "time_units.time_very_simple_unit_parse": {
        "code": "def time_very_simple_unit_parse():\n    u.Unit('d')\n", 
        "goal_time": 2.0, 
        "name": "time_units.time_very_simple_unit_parse", 
        "number": 0, 
        "repeat": 3, 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "version": 1
}