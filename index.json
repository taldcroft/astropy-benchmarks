{
    "benchmarks": {
        "io_ascii.time_ascii.AastexFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.AastexFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.AastexFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.AastexFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.AastexInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.AastexInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.AastexInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.AastexInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.AastexString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.AastexString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.AastexString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.AastexString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.BasicFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.BasicFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.BasicFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.BasicFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.BasicInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.BasicInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.BasicInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.BasicInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.BasicString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.BasicString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.BasicString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.BasicString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CommentedHeaderFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CommentedHeaderFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CommentedHeaderFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CommentedHeaderFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CommentedHeaderInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CommentedHeaderInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CommentedHeaderInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CommentedHeaderInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CommentedHeaderString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CommentedHeaderString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CommentedHeaderString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CommentedHeaderString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CsvFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CsvFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CsvFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CsvFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CsvInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CsvInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CsvInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CsvInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CsvString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CsvString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.CsvString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.CsvString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthNoHeaderFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthNoHeaderFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthNoHeaderFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthNoHeaderFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthNoHeaderInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthNoHeaderInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthNoHeaderInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthNoHeaderInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthNoHeaderString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthNoHeaderString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthNoHeaderString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthNoHeaderString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthTwoLineFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthTwoLineFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthTwoLineFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthTwoLineFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthTwoLineInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthTwoLineInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthTwoLineInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthTwoLineInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthTwoLineString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthTwoLineString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.FixedWidthTwoLineString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.FixedWidthTwoLineString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.IpacFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.IpacFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.IpacFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.IpacFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.IpacInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.IpacInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.IpacInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.IpacInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.IpacString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.IpacString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.IpacString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.IpacString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.LatexFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.LatexFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.LatexFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.LatexFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.LatexInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.LatexInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.LatexInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.LatexInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.LatexString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.LatexString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.LatexString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.LatexString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.NoHeaderFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.NoHeaderFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.NoHeaderFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.NoHeaderFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.NoHeaderInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.NoHeaderInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.NoHeaderInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.NoHeaderInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.NoHeaderString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.NoHeaderString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.NoHeaderString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.NoHeaderString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.RdbFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.RdbFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.RdbFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.RdbFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.RdbInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.RdbInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.RdbInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.RdbInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.RdbString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.RdbString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.RdbString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.RdbString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.SextractorFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.SextractorFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.SextractorInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.SextractorInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.SextractorString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.SextractorString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.TabFloat.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.TabFloat.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.TabFloat.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.TabFloat.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.TabInt.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.TabInt.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.TabInt.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.TabInt.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.TabString.time_read": {
            "code": "def read(self):\n    return ascii.read(BytesIO(self.data), format=self.file_format, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.TabString.time_read", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ascii.TabString.time_write": {
            "code": "def write(self):\n    ascii.write(self.table, self.output, Writer=self.writers[self.file_format])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ascii.TabString.time_write", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_core.CoreSuite.time_base_splitter": {
            "code": "def time_base_splitter(self):\n    core.BaseSplitter().process_val(self.line)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_core.CoreSuite.time_base_splitter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_core.CoreSuite.time_continuation_inputter": {
            "code": "def time_continuation_inputter(self):\n    core.ContinuationLinesInputter().process_lines(self.lines)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_core.CoreSuite.time_continuation_inputter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_core.CoreSuite.time_convert_vals": {
            "code": "def time_convert_vals(self):\n    core.TableOutputter()._convert_vals(self.cols)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_core.CoreSuite.time_convert_vals", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_core.CoreSuite.time_default_splitter_call": {
            "code": "def time_default_splitter_call(self):\n    core.DefaultSplitter()(self.csv_line)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_core.CoreSuite.time_default_splitter_call", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_core.CoreSuite.time_default_splitter_join": {
            "code": "def time_default_splitter_join(self):\n    core.DefaultSplitter().join(self.vals)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_core.CoreSuite.time_default_splitter_join", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_core.CoreSuite.time_whitespace_splitter": {
            "code": "def time_whitespace_splitter(self):\n    core.WhitespaceSplitter().process_line(self.line)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_core.CoreSuite.time_whitespace_splitter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_fixedwidth.FixedWidthSuite.time_header": {
            "code": "def time_header(self):\n    self.header.get_cols(self.lines)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_fixedwidth.FixedWidthSuite.time_header", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_fixedwidth.FixedWidthSuite.time_splitter": {
            "code": "def time_splitter(self):\n    self.splitter(self.lines[1:])\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_fixedwidth.FixedWidthSuite.time_splitter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ipac.IPACSuite.time_data_str_vals": {
            "code": "def time_data_str_vals(self):\n    data = IpacData()\n    data.cols = list(self.table.columns.values())\n    data.str_vals()\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ipac.IPACSuite.time_data_str_vals", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ipac.IPACSuite.time_get_cols": {
            "code": "def time_get_cols(self):\n    self.header.get_cols(self.lines)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ipac.IPACSuite.time_get_cols", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ipac.IPACSuite.time_header_str_vals": {
            "code": "def time_header_str_vals(self):\n    header = IpacHeader()\n    header.cols = list(self.table.columns.values())\n    header.DBMS = False\n    header.str_vals()\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ipac.IPACSuite.time_header_str_vals", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_ipac.IPACSuite.time_splitter": {
            "code": "def time_splitter(self):\n    self.splitter.join(self.vals, self.widths)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_ipac.IPACSuite.time_splitter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_rdb.RDBSuite.time_get_cols": {
            "code": "def time_get_cols(self):\n    self.header.get_cols(self.lines)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_rdb.RDBSuite.time_get_cols", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_sextractor.SExtractorSuite.time_header": {
            "code": "def time_header(self):\n    self.header.get_cols(self.lines)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_sextractor.SExtractorSuite.time_header", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_table.TableSuite.mem_table_init": {
            "code": "def mem_table_init(self):\n    return table.Table(self.lst)\n", 
            "name": "io_ascii.time_table.TableSuite.mem_table_init", 
            "timeout": 60.0, 
            "type": "memory", 
            "unit": "bytes"
        }, 
        "io_ascii.time_table.TableSuite.mem_table_outputter": {
            "code": "def mem_table_outputter(self):\n    return self.outputter(self.cols, {'table': {}})\n", 
            "name": "io_ascii.time_table.TableSuite.mem_table_outputter", 
            "timeout": 60.0, 
            "type": "memory", 
            "unit": "bytes"
        }, 
        "io_ascii.time_table.TableSuite.time_str_vals_float": {
            "code": "def time_str_vals_float(self):\n    self.table_cols[1].iter_str_vals()\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_table.TableSuite.time_str_vals_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_table.TableSuite.time_str_vals_int": {
            "code": "def time_str_vals_int(self):\n    self.table_cols[0].iter_str_vals()\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_table.TableSuite.time_str_vals_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_table.TableSuite.time_str_vals_str": {
            "code": "def time_str_vals_str(self):\n    self.table_cols[2].iter_str_vals()\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_table.TableSuite.time_str_vals_str", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_table.TableSuite.time_table_init_from_list": {
            "code": "def time_table_init_from_list(self):\n    self.table._init_from_list(self.table_cols, ['1', '2', '3'],\n                               [None, None, None], 3, True)\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_table.TableSuite.time_table_init_from_list", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "io_ascii.time_table.TableSuite.time_table_outputter": {
            "code": "def time_table_outputter(self):\n    self.outputter(self.cols, {'table': {}})\n", 
            "goal_time": 2.0, 
            "name": "io_ascii.time_table.TableSuite.time_table_outputter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_coordinates.FrameBenchmarks.time_init_array": {
            "code": "def time_init_array(self):\n    coords.FK5(self.array_ra, self.array_dec)\n", 
            "goal_time": 2.0, 
            "name": "time_coordinates.FrameBenchmarks.time_init_array", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_coordinates.FrameBenchmarks.time_init_nodata": {
            "code": "def time_init_nodata(self):\n    coords.FK5()\n", 
            "goal_time": 2.0, 
            "name": "time_coordinates.FrameBenchmarks.time_init_nodata", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_coordinates.FrameBenchmarks.time_init_scalar": {
            "code": "def time_init_scalar(self):\n    coords.FK5(self.scalar_ra, self.scalar_dec)\n", 
            "goal_time": 2.0, 
            "name": "time_coordinates.FrameBenchmarks.time_init_scalar", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_coordinates.SkyCoordBenchmarks.time_icrs_to_galactic": {
            "code": "def time_icrs_to_galactic(self):\n    self.coord.transform_to('galactic')\n", 
            "goal_time": 2.0, 
            "name": "time_coordinates.SkyCoordBenchmarks.time_icrs_to_galactic", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_coordinates.SkyCoordBenchmarks.time_repr": {
            "code": "def time_repr(self):\n    repr(self.coord)\n", 
            "goal_time": 2.0, 
            "name": "time_coordinates.SkyCoordBenchmarks.time_repr", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_coordinates.time_latitude": {
            "code": "def time_latitude():\n    coords.Latitude(3.2, u.degree)\n", 
            "goal_time": 2.0, 
            "name": "time_coordinates.time_latitude", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_quantity.time_quantity_array_conversion": {
            "code": "def time_quantity_array_conversion():\n    (np.arange(100000) * u.m / u.s).to(u.km / u.hour)\n", 
            "goal_time": 2.0, 
            "name": "time_quantity.time_quantity_array_conversion", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_quantity.time_quantity_init_array": {
            "code": "def time_quantity_init_array():\n    np.arange(100000) * u.m / u.s\n", 
            "goal_time": 2.0, 
            "name": "time_quantity.time_quantity_init_array", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_quantity.time_quantity_init_scalar": {
            "code": "def time_quantity_init_scalar():\n    3. * u.m / u.s\n", 
            "goal_time": 2.0, 
            "name": "time_quantity.time_quantity_init_scalar", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_quantity.time_quantity_scalar_conversion": {
            "code": "def time_quantity_scalar_conversion():\n    (3. * u.m / u.s).to(u.km / u.hour)\n", 
            "goal_time": 2.0, 
            "name": "time_quantity.time_quantity_scalar_conversion", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_quantity.time_quantity_ufunc_sin": {
            "code": "def time_quantity_ufunc_sin():\n    np.sin(np.arange(10000) * u.degree)\n", 
            "goal_time": 2.0, 
            "name": "time_quantity.time_quantity_ufunc_sin", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_add_column": {
            "code": "def time_add_column(self):\n    self.table['e'] = self.extra_column\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_add_column", 
            "number": 1, 
            "repeat": 1, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_add_row": {
            "code": "def time_add_row(self):\n    self.table.add_row(self.extra_row)\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_add_row", 
            "number": 1, 
            "repeat": 1, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_aggregate": {
            "code": "def time_aggregate(self):\n    # Test aggregate with a function that supports reduceat\n    self.table_grouped.groups.aggregate(np.sum)\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_aggregate", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_aggregate_noreduceat": {
            "code": "def time_aggregate_noreduceat(self):\n    # Test aggregate with a function that doesn't support reduceat\n    self.table_grouped.groups.aggregate(lambda x: np.sum(x))\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_aggregate_noreduceat", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_column_get": {
            "code": "def time_column_get(self):\n    self.table['c']\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_column_get", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_column_make_bool_mask": {
            "code": "def time_column_make_bool_mask(self):\n    self.table['a'] > 0.6\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_column_make_bool_mask", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_column_set": {
            "code": "def time_column_set(self):\n    self.table['a'] = 0.\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_column_set", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_column_set_all": {
            "code": "def time_column_set_all(self):\n    self.table['b'][:] = True\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_column_set_all", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_column_set_row_subset": {
            "code": "def time_column_set_row_subset(self):\n    self.table['b'][self.bool_mask] = True\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_column_set_row_subset", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_column_set_row_subset_int": {
            "code": "def time_column_set_row_subset_int(self):\n    self.table['b'][self.row_indices] = True\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_column_set_row_subset_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_column_slice_bool": {
            "code": "def time_column_slice_bool(self):\n    col_subset = self.table['a'][self.bool_mask]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_column_slice_bool", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_column_slice_int": {
            "code": "def time_column_slice_int(self):\n    col_subset = self.table['a'][self.row_indices]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_column_slice_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_copy_column": {
            "code": "def time_copy_column(self):\n    self.table['a'].copy()\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_copy_column", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_copy_table": {
            "code": "def time_copy_table(self):\n    self.table.copy()\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_copy_table", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_group": {
            "code": "def time_group(self):\n    self.table.group_by('d')\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_group", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_hstack": {
            "code": "def time_hstack(self):\n    hstack([self.table, self.other_table_2])\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_hstack", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_item_get_colfirst": {
            "code": "def time_item_get_colfirst(self):\n    self.table['b'][300]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_item_get_colfirst", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_item_get_rowfirst": {
            "code": "def time_item_get_rowfirst(self):\n    self.table[300]['b']\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_item_get_rowfirst", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_iter_row": {
            "code": "def time_iter_row(self):\n    for row in self.table:\n        pass\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_iter_row", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_join_inner": {
            "code": "def time_join_inner(self):\n    join(self.table, self.other_table, keys=\"i\", join_type='inner')\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_join_inner", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_join_outer": {
            "code": "def time_join_outer(self):\n    join(self.table, self.other_table, keys=\"i\", join_type='outer')\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_join_outer", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_mask_column": {
            "code": "def time_mask_column(self):\n    self.table['a'].mask = self.bool_mask\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_mask_column", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_multi_column_get": {
            "code": "def time_multi_column_get(self):\n    self.table[('a','c')]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_multi_column_get", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_remove_column": {
            "code": "def time_remove_column(self):\n    self.table.remove_column('a')\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_remove_column", 
            "number": 1, 
            "repeat": 1, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_remove_row": {
            "code": "def time_remove_row(self):\n    self.table.remove_row(6)\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_remove_row", 
            "number": 1, 
            "repeat": 1, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_remove_rows": {
            "code": "def time_remove_rows(self):\n    self.table.remove_rows(self.row_indices)\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_remove_rows", 
            "number": 1, 
            "repeat": 1, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_row_get": {
            "code": "def time_row_get(self):\n    self.table[300]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_row_get", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_sort": {
            "code": "def time_sort(self):\n    self.table.sort('a')\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_sort", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_table_slice_bool": {
            "code": "def time_table_slice_bool(self):\n    table_subset = self.table[self.bool_mask]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_table_slice_bool", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_table_slice_int": {
            "code": "def time_table_slice_int(self):\n    table_subset = self.table[self.row_indices]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_table_slice_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeMaskedTable.time_vstack": {
            "code": "def time_vstack(self):\n    vstack([self.table, self.table])\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeMaskedTable.time_vstack", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_add_column": {
            "code": "def time_add_column(self):\n    self.table['e'] = self.extra_column\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_add_column", 
            "number": 1, 
            "repeat": 1, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_add_row": {
            "code": "def time_add_row(self):\n    self.table.add_row(self.extra_row)\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_add_row", 
            "number": 1, 
            "repeat": 1, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_aggregate": {
            "code": "def time_aggregate(self):\n    # Test aggregate with a function that supports reduceat\n    self.table_grouped.groups.aggregate(np.sum)\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_aggregate", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_aggregate_noreduceat": {
            "code": "def time_aggregate_noreduceat(self):\n    # Test aggregate with a function that doesn't support reduceat\n    self.table_grouped.groups.aggregate(lambda x: np.sum(x))\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_aggregate_noreduceat", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_column_get": {
            "code": "def time_column_get(self):\n    self.table['c']\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_column_get", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_column_make_bool_mask": {
            "code": "def time_column_make_bool_mask(self):\n    self.table['a'] > 0.6\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_column_make_bool_mask", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_column_set": {
            "code": "def time_column_set(self):\n    self.table['a'] = 0.\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_column_set", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_column_set_all": {
            "code": "def time_column_set_all(self):\n    self.table['b'][:] = True\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_column_set_all", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_column_set_row_subset": {
            "code": "def time_column_set_row_subset(self):\n    self.table['b'][self.bool_mask] = True\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_column_set_row_subset", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_column_set_row_subset_int": {
            "code": "def time_column_set_row_subset_int(self):\n    self.table['b'][self.row_indices] = True\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_column_set_row_subset_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_column_slice_bool": {
            "code": "def time_column_slice_bool(self):\n    col_subset = self.table['a'][self.bool_mask]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_column_slice_bool", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_column_slice_int": {
            "code": "def time_column_slice_int(self):\n    col_subset = self.table['a'][self.row_indices]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_column_slice_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_copy_column": {
            "code": "def time_copy_column(self):\n    self.table['a'].copy()\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_copy_column", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_copy_table": {
            "code": "def time_copy_table(self):\n    self.table.copy()\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_copy_table", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_group": {
            "code": "def time_group(self):\n    self.table.group_by('d')\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_group", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_hstack": {
            "code": "def time_hstack(self):\n    hstack([self.table, self.other_table_2])\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_hstack", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_item_get_colfirst": {
            "code": "def time_item_get_colfirst(self):\n    self.table['b'][300]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_item_get_colfirst", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_item_get_rowfirst": {
            "code": "def time_item_get_rowfirst(self):\n    self.table[300]['b']\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_item_get_rowfirst", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_iter_row": {
            "code": "def time_iter_row(self):\n    for row in self.table:\n        pass\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_iter_row", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_join_inner": {
            "code": "def time_join_inner(self):\n    join(self.table, self.other_table, keys=\"i\", join_type='inner')\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_join_inner", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_join_outer": {
            "code": "def time_join_outer(self):\n    join(self.table, self.other_table, keys=\"i\", join_type='outer')\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_join_outer", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_multi_column_get": {
            "code": "def time_multi_column_get(self):\n    self.table[('a','c')]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_multi_column_get", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_remove_column": {
            "code": "def time_remove_column(self):\n    self.table.remove_column('a')\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_remove_column", 
            "number": 1, 
            "repeat": 1, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_remove_row": {
            "code": "def time_remove_row(self):\n    self.table.remove_row(6)\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_remove_row", 
            "number": 1, 
            "repeat": 1, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_remove_rows": {
            "code": "def time_remove_rows(self):\n    self.table.remove_rows(self.row_indices)\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_remove_rows", 
            "number": 1, 
            "repeat": 1, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_row_get": {
            "code": "def time_row_get(self):\n    self.table[300]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_row_get", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_sort": {
            "code": "def time_sort(self):\n    self.table.sort('a')\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_sort", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_table_slice_bool": {
            "code": "def time_table_slice_bool(self):\n    table_subset = self.table[self.bool_mask]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_table_slice_bool", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_table_slice_int": {
            "code": "def time_table_slice_int(self):\n    table_subset = self.table[self.row_indices]\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_table_slice_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_table.TimeTable.time_vstack": {
            "code": "def time_vstack(self):\n    vstack([self.table, self.table])\n", 
            "goal_time": 2.0, 
            "name": "time_table.TimeTable.time_vstack", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_units.mem_unit": {
            "code": "def mem_unit():\n    return u.erg\n", 
            "name": "time_units.mem_unit", 
            "timeout": 60.0, 
            "type": "memory", 
            "unit": "bytes"
        }, 
        "time_units.time_compose_to_bases": {
            "code": "def time_compose_to_bases():\n    x = copy.copy(u.Ry)\n    x.cgs\n", 
            "goal_time": 2.0, 
            "name": "time_units.time_compose_to_bases", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_units.time_simple_unit_parse": {
            "code": "def time_simple_unit_parse():\n    u.Unit('1 d')\n", 
            "goal_time": 2.0, 
            "name": "time_units.time_simple_unit_parse", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_units.time_unit_compose": {
            "code": "def time_unit_compose():\n    u.Ry.compose()\n", 
            "goal_time": 2.0, 
            "name": "time_units.time_unit_compose", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_units.time_unit_parse": {
            "code": "def time_unit_parse():\n    u.Unit('1e-07 kg m2 / s2')\n", 
            "goal_time": 2.0, 
            "name": "time_units.time_unit_parse", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_units.time_unit_to": {
            "code": "def time_unit_to():\n    u.m.to(u.pc)\n", 
            "goal_time": 2.0, 
            "name": "time_units.time_unit_to", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "time_units.time_very_simple_unit_parse": {
            "code": "def time_very_simple_unit_parse():\n    u.Unit('d')\n", 
            "goal_time": 2.0, 
            "name": "time_units.time_very_simple_unit_parse", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }
    }, 
    "date_to_hash": {
        "1373267128000": "374883dc", 
        "1373643785000": "caae57a0", 
        "1374266443000": "2fb48c88", 
        "1374514935000": "445367bf", 
        "1374871298000": "94f9553b", 
        "1375210022000": "443ecf4b", 
        "1375480968000": "9721b59c", 
        "1376077643000": "6ff92413", 
        "1376405616000": "7ea288f7", 
        "1376928264000": "183b07d1", 
        "1377661085000": "5e2699fb", 
        "1378194796000": "e821fdab", 
        "1378308718000": "5b990050", 
        "1378383985000": "5933ac76", 
        "1378509326000": "c625ad08", 
        "1378833677000": "0afe010e", 
        "1379112765000": "39768878", 
        "1379605286000": "8bf1685e", 
        "1379717408000": "0b3f074f", 
        "1380068586000": "397520d9", 
        "1380573552000": "14a48580", 
        "1380711848000": "afbfed70", 
        "1380767437000": "57485e7c", 
        "1380892829000": "ffbe7b7b", 
        "1381025481000": "4fe60c7d", 
        "1381437508000": "8b21fcc5", 
        "1381766097000": "f4b62d6b", 
        "1382019105000": "bbd9ec43", 
        "1382111020000": "4298f167", 
        "1382362633000": "00f60761", 
        "1382385223000": "4e9a890f", 
        "1382456013000": "a5879a3a", 
        "1382548815000": "fa826011", 
        "1382599076000": "f4ec96aa", 
        "1382645348000": "d3f5da7f", 
        "1382708537000": "11a8b64f", 
        "1383000111000": "4449b00a", 
        "1383140864000": "2d1e7bbe", 
        "1383202599000": "c746c533", 
        "1383327033000": "8550ab63", 
        "1383479182000": "59120976", 
        "1383542385000": "b48aa135", 
        "1383688331000": "1c8f1abc", 
        "1383871595000": "9192e59c", 
        "1384226644000": "ddc59993", 
        "1384521297000": "6025122b", 
        "1384999251000": "e8555f40", 
        "1385478452000": "131d520d", 
        "1386004069000": "9c58f726", 
        "1386174887000": "316d368e", 
        "1386607789000": "05d43454", 
        "1386862378000": "161dbe54", 
        "1386966189000": "36a2d366", 
        "1387383064000": "19c31bce", 
        "1388490550000": "19acd5f5", 
        "1389271719000": "352db5e4", 
        "1389715621000": "81ddb64c", 
        "1390002378000": "96c9598c", 
        "1390342961000": "07b5943b", 
        "1390589345000": "884d9d43", 
        "1390956811000": "21f2895a", 
        "1391203546000": "7284ea93", 
        "1391610332000": "eeccf4e1", 
        "1392071978000": "07daa46f", 
        "1392223588000": "ba9b2a46", 
        "1392582605000": "76a4614d", 
        "1393014029000": "e3dcd2fd", 
        "1393342747000": "b6c2d10e", 
        "1393534197000": "a4d082ea", 
        "1393676614000": "bf67dd77", 
        "1393955187000": "0cd07524", 
        "1394568892000": "ae1dd334", 
        "1395341892000": "6d83b3d7", 
        "1395773731000": "e7f0e791", 
        "1395941644000": "8a4b1e76", 
        "1396100130000": "b1816dae", 
        "1396625156000": "9cfd2100", 
        "1396888816000": "29d31013", 
        "1397221600000": "42089b0b", 
        "1397483464000": "0bd7426e", 
        "1397746143000": "87e3cb46", 
        "1397921718000": "20d7c642", 
        "1398185063000": "b2631bcd", 
        "1398274210000": "80658665", 
        "1398792712000": "38f9abf2", 
        "1398888705000": "ffd776ea", 
        "1399049701000": "f3da2112", 
        "1399214470000": "ec3c8c5e", 
        "1399342396000": "f75c9d0e", 
        "1399401243000": "07490c29", 
        "1399488808000": "5e3edec3", 
        "1399648129000": "27485397", 
        "1399877295000": "8c37569d", 
        "1400008223000": "01877256", 
        "1400242572000": "6e6ae3b0", 
        "1400527415000": "f832a981", 
        "1400698818000": "f9ca1fbf", 
        "1400805166000": "a1e40ade", 
        "1401148423000": "8358166b", 
        "1401306524000": "20c33f4c", 
        "1401395961000": "3c431ca0", 
        "1401486502000": "47865996", 
        "1401486556000": "ce61fe3b", 
        "1401486881000": "bf6a6ac3", 
        "1401488101000": "d17ba6d7", 
        "1401488678000": "c841ba84", 
        "1401489266000": "bacf9594", 
        "1401602605000": "fca04151", 
        "1401648307000": "ed0a1fac", 
        "1401661283000": "a02120c5", 
        "1401661345000": "9d59129d", 
        "1401710649000": "14e039ad", 
        "1401715274000": "52d7a9ba", 
        "1401720126000": "cb55dcca", 
        "1401727482000": "3c3230c8", 
        "1401770450000": "ea819c71", 
        "1401801307000": "65c7a2bf", 
        "1401801507000": "4fb10929", 
        "1401801877000": "ca20b715", 
        "1401807669000": "d25c4872", 
        "1401836361000": "634213c3", 
        "1401871026000": "1ae84339", 
        "1401872026000": "fb73e67b", 
        "1401872176000": "3d0d593d", 
        "1401926399000": "b6687aa0", 
        "1401933121000": "e874ae17", 
        "1402057777000": "926093de", 
        "1402060622000": "11e3ad6a", 
        "1402061356000": "18c73832", 
        "1402083514000": "2b837557", 
        "1402136849000": "481884c1", 
        "1402153024000": "67c58012", 
        "1402153163000": "e8e03f74", 
        "1402323449000": "a121b75d", 
        "1402343753000": "1fee2d08", 
        "1402344995000": "121eb3ff", 
        "1402353959000": "072e2d0e", 
        "1402381260000": "5899fd69", 
        "1402410019000": "96a9816f", 
        "1402428406000": "6daf2907", 
        "1402434834000": "eafad7a3", 
        "1402438657000": "e7295660", 
        "1402479551000": "5f71c036", 
        "1402676860000": "52c46f24", 
        "1402735168000": "df4745ab", 
        "1402818997000": "9a46c714", 
        "1402820717000": "f58a96a9", 
        "1402842040000": "af166ba5", 
        "1402935057000": "fb460151", 
        "1402947692000": "739c56d9", 
        "1403077125000": "e162c461", 
        "1403140488000": "433856bd", 
        "1403144010000": "3327d417", 
        "1403150213000": "f3ea10b8", 
        "1403170326000": "ee61b9bc", 
        "1403301882000": "7e3834fe", 
        "1403444717000": "d30e1662", 
        "1403446041000": "c6d48df1", 
        "1403447771000": "f791035e", 
        "1403447909000": "b409e7f8", 
        "1403452143000": "f73b1106", 
        "1403484089000": "db7abf85", 
        "1403484225000": "4a9e7115", 
        "1403539754000": "04308b58", 
        "1403631386000": "242b000c", 
        "1403644763000": "fc0e3d73", 
        "1403688717000": "d48e3682", 
        "1403718942000": "070742ee", 
        "1403736385000": "e61db3ea", 
        "1403799593000": "08392309", 
        "1403805959000": "90a1cd0f", 
        "1403806007000": "4085c344", 
        "1403808063000": "be727117", 
        "1403810582000": "1aaa48ff", 
        "1403877836000": "81b702eb", 
        "1403883441000": "5f1ca795", 
        "1403884079000": "adae03db", 
        "1403891356000": "63f0019d", 
        "1404073942000": "4f3d4594", 
        "1404093340000": "d23ab525", 
        "1404128836000": "db9181ee", 
        "1404188456000": "2949ac60", 
        "1404233841000": "03052b7e", 
        "1404233912000": "83b72b64", 
        "1404234024000": "f5834c64", 
        "1404300608000": "1146e71d", 
        "1404304105000": "fd86cb6d", 
        "1404304118000": "ad4fb15e", 
        "1404338061000": "3dafeb96", 
        "1404340405000": "0d103bb2", 
        "1404343553000": "2698ec9d", 
        "1404406517000": "4da28794", 
        "1404420607000": "7bf51b6b", 
        "1404420786000": "179c3182", 
        "1404459187000": "5429b856", 
        "1404581894000": "499a6f72", 
        "1404589928000": "283f84fb", 
        "1404592680000": "5c51ab31", 
        "1404632231000": "a8797f88", 
        "1404673555000": "cdc21d2a", 
        "1404674615000": "a8ad8d97", 
        "1404687564000": "1c2e210f", 
        "1404863529000": "6170e132", 
        "1404968172000": "00f70e30", 
        "1405024291000": "ad82e621", 
        "1405090881000": "1877559d", 
        "1405094881000": "2872359e", 
        "1405096574000": "a91960f7", 
        "1405097022000": "b09d9f8e", 
        "1405097257000": "57f90259", 
        "1405104653000": "753bd003", 
        "1405116272000": "354577b7", 
        "1405176393000": "9431d6e8", 
        "1405176465000": "8cf29435", 
        "1405181333000": "2e530696", 
        "1405316313000": "f37934a4", 
        "1407185108000": "5c4fcf5d", 
        "1407186545000": "5599da8c", 
        "1407189201000": "22aa7eaa", 
        "1407249782000": "c02154af", 
        "1407268237000": "2cf1fa2f", 
        "1407329071000": "ae2ed72d", 
        "1407339019000": "cae59200", 
        "1407340705000": "356c407b", 
        "1407340745000": "3cbc652a", 
        "1407350661000": "b30f858c", 
        "1407365691000": "55962522", 
        "1407367643000": "2c0b990a", 
        "1407435876000": "799d7a23", 
        "1407450194000": "e7ff4162", 
        "1407463208000": "0dafcf73", 
        "1407506477000": "21857ac1", 
        "1407514032000": "635a92e6", 
        "1407514137000": "8ac69722", 
        "1407531120000": "5396b69c", 
        "1407765866000": "ca59551d", 
        "1407769676000": "8670ab52", 
        "1407769833000": "7461f4c9", 
        "1407945447000": "7a7b9954", 
        "1407947060000": "799447b1", 
        "1407947350000": "c8df4388", 
        "1407952373000": "c3d926b9", 
        "1407962906000": "2e3b82c9", 
        "1407975601000": "40bc2a2e", 
        "1407999840000": "756d2615", 
        "1408027729000": "e1eec44e", 
        "1408054539000": "c0183e84", 
        "1408117274000": "9389aaed", 
        "1408124606000": "196071bd", 
        "1408322469000": "ecc5c466", 
        "1408399586000": "ff4425fd", 
        "1408399954000": "2bf73db7", 
        "1408411473000": "51466231", 
        "1408462527000": "051787d4", 
        "1408501371000": "04d5ecb5", 
        "1408649787000": "31b4247d", 
        "1408736555000": "7ce72267", 
        "1408995861000": "88d9db88", 
        "1409065471000": "96934cda", 
        "1409087221000": "9ac577e7", 
        "1409089819000": "24e93362", 
        "1409160449000": "03a2bcbc", 
        "1409236944000": "2a7a06e6", 
        "1409264509000": "da7a4517", 
        "1409276283000": "4bbfb339", 
        "1409346942000": "5d7acd68", 
        "1409596378000": "bbf429a8", 
        "1409671234000": "899ff961", 
        "1409748728000": "6509dd49", 
        "1409767269000": "2cb86b6b", 
        "1409786437000": "d0350f06", 
        "1409848304000": "667db201", 
        "1409932202000": "e804e5a2", 
        "1409948250000": "9720e126", 
        "1409950909000": "e9485ead", 
        "1409999328000": "f232e056", 
        "1409999640000": "9b1b78a0", 
        "1410003840000": "537de332", 
        "1410283427000": "c4a75bfe", 
        "1410292241000": "8c057103", 
        "1410295537000": "a2f28942", 
        "1410300056000": "a6234a47", 
        "1410363852000": "c83a50ee", 
        "1410391690000": "3cb2df9a", 
        "1410419393000": "e806d7d4", 
        "1410512186000": "e5c8cdb5", 
        "1410540563000": "b93d940d", 
        "1410541137000": "c027ce84", 
        "1410560951000": "6698cf49", 
        "1410617112000": "3a74ab9b", 
        "1410634187000": "f5b5e610", 
        "1410792511000": "8ccdad4d", 
        "1410813831000": "10da37d2", 
        "1410828140000": "1e7276c6", 
        "1410876465000": "0307f793", 
        "1410895136000": "03030cb3", 
        "1410895205000": "36398457", 
        "1410961635000": "70891e45", 
        "1410979845000": "e5a3cb82", 
        "1410986033000": "5eb8f09f", 
        "1410986138000": "749b2d91", 
        "1411065229000": "9365c6a6", 
        "1411067601000": "470610e6", 
        "1411075785000": "ae306259", 
        "1411140217000": "9f9327a2", 
        "1411170181000": "097f568c", 
        "1411394599000": "0c4d4f4f", 
        "1411401401000": "c3ac9372", 
        "1411403516000": "f99c8ece", 
        "1411419102000": "063e6a7f", 
        "1411492686000": "1e06b554", 
        "1411501333000": "909f3f23", 
        "1411506614000": "1b74ae99", 
        "1411506768000": "dd653b91", 
        "1411508016000": "7b4d61dd", 
        "1411571237000": "6f1acb2f", 
        "1411575734000": "e83d3616", 
        "1411586080000": "3f247a1d", 
        "1411606803000": "4510b0aa", 
        "1411656678000": "f7875cd0", 
        "1411674712000": "5fe6ac7f", 
        "1411752853000": "30b9f707", 
        "1411997058000": "595cefd0", 
        "1412017437000": "b80794bc", 
        "1412055694000": "28a9d066", 
        "1412059637000": "53060b3e", 
        "1412059717000": "820bf527", 
        "1412107343000": "67a50acd", 
        "1412108660000": "57af658f", 
        "1412174888000": "348df250", 
        "1412195420000": "0ddb342d", 
        "1412202472000": "d37edd38", 
        "1412202550000": "ea051d69", 
        "1412202701000": "51711eaa", 
        "1412203120000": "a8c9aa63", 
        "1412229998000": "b73ad509", 
        "1412641687000": "bf07a802", 
        "1412729368000": "1f9dc674", 
        "1413270684000": "e2c68531", 
        "1413463877000": "a00d0d10", 
        "1413464376000": "80d7ed55", 
        "1413496967000": "63ca1b90"
    }, 
    "machines": {
        "racoon": {
            "arch": "x86_64", 
            "cpu": "Intel(R) Core(TM) i7-3720QM CPU @ 2.60GHz (8 cores)", 
            "machine": "racoon", 
            "os": "Mac OS-X 10.9 Mavericks", 
            "ram": "8GB", 
            "version": 1
        }
    }, 
    "params": {
        "Cython": [
            null
        ], 
        "arch": [
            "x86_64"
        ], 
        "cpu": [
            "Intel(R) Core(TM) i7-3720QM CPU @ 2.60GHz (8 cores)"
        ], 
        "machine": [
            "racoon"
        ], 
        "numpy": [
            "1.8"
        ], 
        "os": [
            "Mac OS-X 10.9 Mavericks"
        ], 
        "python": [
            "2.7", 
            "3.3"
        ], 
        "ram": [
            "8GB"
        ]
    }, 
    "project": "astropy", 
    "project_url": "http://www.astropy.org/", 
    "show_commit_url": "http://github.com/astropy/astropy/commit/", 
    "tags": {
        "stable": 1365018342000, 
        "v0.1": 1340086193000, 
        "v0.2": 1361312808000, 
        "v0.2.1": 1365018342000, 
        "v0.2.2": 1369169818000, 
        "v0.2.3": 1369943695000, 
        "v0.2.4": 1374690436000, 
        "v0.2.5": 1382718598000, 
        "v0.2b1": 1356381732000, 
        "v0.2b2": 1359508111000, 
        "v0.2rc1": 1360776151000, 
        "v0.3": 1384996150000, 
        "v0.3.1": 1393955310000, 
        "v0.3.2": 1399997164000, 
        "v0.3b1": 1383542385000, 
        "v0.3rc1": 1384388274000, 
        "v0.4": 1405527129000, 
        "v0.4.1": 1407512129000, 
        "v0.4.2": 1411505522000, 
        "v0.4rc1": 1404233912000, 
        "v0.4rc2": 1405176393000
    }
}